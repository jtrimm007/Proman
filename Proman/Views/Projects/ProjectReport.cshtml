@model Proman.Models.ViewModels.ProjectReportVM

@{
    ViewData["Title"] = "Project Report";


}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Project ReportVM</h4>
    <hr />
    <dl class="row"></dl>
</div>
<table>
    <thead>
        <tr>
            <th class="p-3">Project</th>
            <th class="p-3"># of People</th>

            <th class="p-3">

                People on project

            </th>
            <th class="p-3">Roles</th>
            <th class="p-3">Hourly Rate</th>
            <th class="p-3">Total Hourly</th>

        </tr>
    </thead>
    <tbody>


        @*Loop through each project*@
        @foreach (var eachProject in Model.ListOfProjectsAndPeople.OrderBy(s => s.Key.Name))
        {
            <tr>
                <td class="border p-3">
                    @Html.DisplayFor(modelItem => eachProject.Key.Name)
                </td>
                <td class="border p-3">
                    @Html.DisplayFor(modelItem => eachProject.Value.Count)
                </td>
                <td class="border p-3">
                    @*Loop through each person assigned to the project*@
                    @foreach (var eachPerson in eachProject.Value.OrderBy(s => s.Key))
                    {
                        <span>
                            @Html.DisplayFor(modelItem => eachPerson.Key)
                        </span><br />
                    }
                </td>
                <td class="border p-3">
                    @*Loop through each set of the assigned roles for each person*@
                    @foreach (var eachPerson in eachProject.Value.OrderBy(s => s.Key))
                    {
                        <span>
                            @*Loop through each role*@
                            @foreach (var eachRole in eachPerson.Value.OrderBy(s => s.Key.Name))
                            {
                                <span>@Html.DisplayFor(modelItem => eachRole.Key.Name), </span>

                            }
                        </span><br />
                    }
                </td>
                <td class="border p-3">
                    @*Loop through each of the values for hourly rate assigned to the project*@
                    @foreach (var eachPerson in eachProject.Value.OrderBy(s => s.Key))
                    {
                        <span>
                            @*Loop through each rate for each role*@
                            @foreach (var eachRole in eachPerson.Value.OrderBy(s => s.Key.Name))
                            {
                                <span>$@Html.DisplayFor(modelItem => eachRole.Value), </span>

                            }
                        </span><br />
                    }
                </td>
                <td class="border p-3">
                    @{
                        decimal total = 0;

                    }
                    @foreach (var eachPerson in eachProject.Value)
                    {

                        <span>



                            @{
                                @*Add each line member rate together*@
                                total = total + eachPerson.Value.Values.Sum();



                            }
                        </span><br />
                    }

                    @*Display the total hourly rate for each project*@
                    $@(total)
                </td>

            </tr>
        }



    </tbody>
</table>
<a class="btn btn-primary" asp-action="Index" asp-controller="Home">Back to Home Page</a>
